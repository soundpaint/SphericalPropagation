<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "project.dtd"> -->
<!--
  @(#)build.xml 1.00 18/07/21

  Copyright (C) 2018 JÃ¼rgen Reuter

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<project name="spherical-propagation" default="all" basedir=".">

  <!-- set DSTAMP, TSTAMP, and TODAY properties -->
  <tstamp />

  <!-- relative position in the file system -->
  <property name="projectroot" value="."/>
  <property name="srcdir" value="${projectroot}/src"/>
  <property name="projectname" value="spherical propagation"/>
  <property name="appmain" value="org.soundpaint.sphericalpropagation.Main"/>

  <!-- standard structure of output files -->
  <property name="builddir" value="${projectroot}/build"/>
  <property name="outputdir" value="${builddir}/${ant.project.name}"/>
  <property name="classdir" value="${outputdir}/class"/>
  <property name="libdir" value="${outputdir}/lib"/>
  <property name="rundir" value="${outputdir}/run"/>
  <property name="binjar" value="${libdir}/${ant.project.name}.jar"/>
  <property name="java-sources" value="${srcdir}/java"/>

  <!-- captured images and video -->
  <property name="image-all-filenames" value="spherical-propagation_*.png" />
  <property name="image-filename" value="spherical-propagation_%05d.png" />
  <property name="video-filename" value="spherical-propagation.mp4"/>

  <path id="classpath">
    <pathelement path="${classdir}"/>
  </path>

  <!-- build targets  -->

  <target name="bin">
    <mkdir dir="${classdir}"/>
    <javac debug="yes" srcdir="${java-sources}" destdir="${classdir}"
           deprecation="yes">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="bin.jar" depends="bin">
    <mkdir dir="${libdir}"/>
    <jar jarfile="${binjar}"
         manifest="${srcdir}/META-INF/MANIFEST.MF"
         update="false">
      <fileset dir="${projectroot}" casesensitive="yes">
        <include name="COPYING_??"/>
      </fileset>
      <fileset dir="${classdir}"/>
      <fileset dir="${java-sources}">
        <include name="**/*.properties"/>
      </fileset>
      <fileset dir="${outputdir}">
        <include name="media/*.syg"/>
      </fileset>
      <fileset dir="${srcdir}">
        <include name="media/*.png"/>
      </fileset>
      <fileset dir="${outputdir}">
        <include name="helpdoc/**" />
      </fileset>
      <manifest>
        <attribute name="Specification-Version"
                   value="${version}"/>
        <attribute name="Implementation-Version"
                   value="${version} ${TODAY}"/>
      </manifest>
    </jar>
  </target>

  <target name="all" depends="bin.jar"/>

  <target name="run" depends="bin.jar">
    <mkdir dir="${rundir}"/>
    <!-- delete old image files, if present -->
    <delete>
      <fileset dir="${rundir}" includes="${image-all-filenames}"/>
      <fileset dir="${rundir}" includes="${video-filename}"/>
    </delete>
    <!-- run the simulation to create sequence of images -->
    <java jar="${binjar}" fork="yes">
      <sysproperty key="rundir" value="${rundir}"/>
      <sysproperty key="image-filename" value="${image-filename}"/>
      <assertions>
        <enable />
      </assertions>
      <classpath refid="classpath"/>
    </java>
    <!-- create video from sequence of images -->
    <exec executable="ffmpeg" dir="${rundir}">
      <arg value="-y"/> <!-- force overwrite existing output file -->
      <arg value="-framerate"/> <!-- 10 frames per second -->
      <arg value="10"/>
      <arg value="-i"/> <!-- image input filename pattern -->
      <arg value="${image-filename}"/>
      <arg value="-c:v"/> <!-- video stream -->
      <arg value="libx264"/> <!-- with codec x264 -->
      <arg value="-profile:v"/> <!-- x264: select "high" profile -->
      <arg value="high"/>
      <arg value="-crf"/> <!-- x264: constant rate factor 23 (med quality) -->
      <arg value="23"/>
      <arg value="-pix_fmt"/> <!-- x264: set pixel format yuv420p -->
      <arg value="yuv420p"/>
      <arg value="${video-filename}"/> <!-- output file name -->
    </exec>
    <!-- play the video in an endless loop, with 3 seconds of pause
         to avoid clogging up the window manager for short videos -->
    <exec executable="vlc" dir="${rundir}">
      <arg value="${video-filename}"/> <!-- play the generated file -->
      <arg value="vlc://pause:3" /> <!-- 3 seconds pause before replay -->
      <arg value="--loop"/> <!-- replay forever -->
    </exec>
  </target>

  <target name="tarball">
    <tstamp prefix="tarstamp.">
      <format property="TODAY" pattern="yyyy-MM-dd.HH-mm-ss" />
    </tstamp>
    <tar destfile="${projectroot}/../sphericalpropagation-${tarstamp.TODAY}.src.tar.bz2"
         compression="bzip2">
      <tarfileset dir="." prefix="sphericalpropagation-${tarstamp.TODAY}">
        <exclude name="**/*~" />
        <exclude name="build/**" />
      </tarfileset>
    </tar>
  </target>

  <target name="clean">
    <delete dir="${outputdir}"/>
  </target>

  <target name="cleanall">
    <delete dir="${antbuildrootdir}"/>
  </target>
</project>

<!--
    Local Variables:
    coding:utf-8
    mode:sgml
    mode:nXML
    End:
-->
